package  {		public class rotation {		public function rotation() {		var treffer_ab:Number=8;		buttonMode=true;// original position merken		var xOrg:Number = x;		var yOrg:Number = y;		// als bilderersatz		var bild:Sprite;		switch (name) {			case 'p0' :				bild= new puzzle0();				break;			case 'p1' :				bild= new puzzle1();				break;			case 'p2' :				bild= new puzzle0();				bild.rotation=90;				break;			case 'p3' :				bild= new puzzle1();				bild.rotation=-90;				break;			case 'p4' :				bild= new puzzle2();				break;			case 'p5' :				bild= new puzzle1();				bild.rotation=90;				break;			case 'p6' :				bild= new puzzle0();				bild.rotation=-90;				break;			case 'p7' :				bild= new puzzle1();				bild.rotation=-180;				break;			case 'p8' :				bild= new puzzle0();				bild.rotation=-180;				break;		}addChild(bild);addEventListener(MouseEvent.MOUSE_DOWN, fPuzzleDown);addEventListener(MouseEvent.MOUSE_UP, fPuzzleUp);function fPuzzleDown(e:MouseEvent):void {	// ganz nach oben, damit man es auch sieht	parent.setChildIndex(this, parent.numChildren-1);	startDrag();}function fPuzzleUp(e:MouseEvent):void {	stopDrag();	// treffer?	if (Math.abs(x-xOrg)+Math.abs(y-yOrg)<treffer_ab) {		// ganz nach unten, damit man an andere heran kommt		parent.setChildIndex(this, 0);		removeEventListener(MouseEvent.MOUSE_DOWN, fPuzzleDown);		removeEventListener(MouseEvent.MOUSE_UP, fPuzzleUp);		buttonMode=false;		// ordentlich hinstellen		x=xOrg;		y=yOrg;		// abmelden zum zählen		stage.dispatchEvent(new Event("treffer"));	}}			// constructor code		}	}	}