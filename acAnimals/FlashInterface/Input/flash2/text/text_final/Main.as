package {	import flash.display.Sprite;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.events.Event;	import flash.ui.Keyboard;	import flash.events.KeyboardEvent;	import flash.text.TextField;	import flash.events.MouseEvent;	import flash.text.TextFormat;	public class Main extends Sprite	{		private var urlLoader:URLLoader = new URLLoader();		private var suggestions:Array = new Array();		private var suggested:Array = new Array();		private var textfields:Array = new Array();		private var format:TextFormat = new TextFormat();		private var currentSelection:int = -1;		public function Main():void		{			urlLoader.load(new URLRequest("Namen.txt"));			urlLoader.addEventListener(Event.COMPLETE, loadComplete);			inputField.addEventListener(KeyboardEvent.KEY_UP, suggest);			format.font = "Helvetica";			format.size = 12;			format.bold = true;		}		private function loadComplete(e:Event):void		{			suggestions = e.target.data.split(",");		}		private function suggest(e:KeyboardEvent):void		{			suggested = [];			for (var i:int = 0; i < textfields.length; i++)			{				removeChild(textfields[i]);			}			textfields = [];			for (var j:int = 0; j < suggestions.length; j++)			{				if (suggestions[j].indexOf(inputField.text.toLowerCase()) == 0)				{					var term:TextField = new TextField();					term.width = 100;					term.height = 20;					term.x = 75;					term.y = (20 * suggested.length) + 88;					term.border = true;					term.borderColor = 0x353535;					term.background = true;					term.backgroundColor = 0x282828;					term.textColor = 0xEEEEEE;					term.defaultTextFormat = format;					term.addEventListener(MouseEvent.MOUSE_UP, useWord);					term.addEventListener(MouseEvent.MOUSE_OVER, hover);					term.addEventListener(MouseEvent.MOUSE_OUT, out);					addChild(term);					textfields.push(term);					suggested.push(suggestions[j]);					term.text = suggestions[j];				}							}			if (inputField.length == 0)			{				suggested = [];				for (var k:int = 0; k < textfields.length; k++)				{					removeChild(textfields[k]);				}				textfields = [];			}						if(e.keyCode == Keyboard.DOWN && currentSelection < textfields.length-1)			{				currentSelection++;				textfields[currentSelection].textColor = 0xFFCC00;			}						if(e.keyCode == Keyboard.UP && currentSelection > 0)			{				currentSelection--;				textfields[currentSelection].textColor = 0xFFCC00;			}						if(e.keyCode == Keyboard.ENTER)			{				inputField.text = textfields[currentSelection].text;								suggested = [];				for (var l:int = 0; l < textfields.length; l++)				{					removeChild(textfields[l]);				}				textfields = [];				currentSelection = 0;			}		}		private function useWord(e:MouseEvent):void		{			inputField.text = e.target.text;			suggested = [];			for (var i:int = 0; i < textfields.length; i++)			{				removeChild(textfields[i]);			}			textfields = [];		}		private function hover(e:MouseEvent):void		{			e.target.textColor = 0xFFCC00;		}		private function out(e:MouseEvent):void		{			e.target.textColor = 0xEEEEEE;		}	}}